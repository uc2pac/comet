/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/app/home/home.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '../../../../src/app/home/title/title.service';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/http/src/http';
import * as import10 from '../../../../src/app/app.service';
import * as import11 from './home.component.css.shim.ngstyle';
import * as import12 from './x-large/x-large.directive.ngfactory';
import * as import13 from '../../../node_modules/@angular/forms/src/directives/ng_form.ngfactory';
import * as import14 from '../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import15 from '@angular/common/src/pipes/json_pipe';
import * as import16 from '@angular/core/src/change_detection/change_detection_util';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from '../../../../src/app/home/x-large/x-large.directive';
import * as import19 from '@angular/forms/src/directives/ng_form';
import * as import20 from '@angular/forms/src/directives/control_container';
import * as import21 from '@angular/forms/src/directives/ng_control_status';
export class Wrapper_HomeComponent {
  /*private*/ _eventHandler:Function;
  context:import0.HomeComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.HomeComponent(p0,p1);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_HomeComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_HomeComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.HomeComponent>;
  _Title_0_3:import5.Title;
  _HomeComponent_0_4:Wrapper_HomeComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_HomeComponent_Host0,renderType_HomeComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'home',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_HomeComponent0(this.viewUtils,this,0,this._el_0);
    this._Title_0_3 = new import5.Title(this.injectorGet(import9.Http,this.parentIndex));
    this._HomeComponent_0_4 = new Wrapper_HomeComponent(this.injectorGet(import10.AppState,this.parentIndex),this._Title_0_3);
    this.compView_0.create(this._HomeComponent_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._HomeComponent_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.Title) && (0 === requestNodeIndex))) { return this._Title_0_3; }
    if (((token === import0.HomeComponent) && (0 === requestNodeIndex))) { return this._HomeComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._HomeComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const HomeComponentNgFactory:import8.ComponentFactory<import0.HomeComponent> = new import8.ComponentFactory<import0.HomeComponent>('home',View_HomeComponent_Host0,import0.HomeComponent);
const styles_HomeComponent:any[] = [import11.styles];
var renderType_HomeComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.Emulated,styles_HomeComponent,{});
export class View_HomeComponent0 extends import1.AppView<import0.HomeComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _XLargeDirective_2_3:import12.Wrapper_XLargeDirective;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _text_11:any;
  _text_12:any;
  _el_13:any;
  _text_14:any;
  _el_15:any;
  _text_16:any;
  _el_17:any;
  _text_18:any;
  _text_19:any;
  _el_20:any;
  _NgForm_20_3:import13.Wrapper_NgForm;
  _ControlContainer_20_4:any;
  _NgControlStatusGroup_20_5:import14.Wrapper_NgControlStatusGroup;
  _text_21:any;
  _el_22:any;
  _text_23:any;
  _el_24:any;
  _text_25:any;
  _text_26:any;
  _text_27:any;
  _text_28:any;
  _el_29:any;
  _text_30:any;
  _text_31:any;
  _text_32:any;
  _text_33:any;
  /*private*/ _expr_38:any;
  /*private*/ _expr_39:any;
  _pipe_json_0:import15.JsonPipe;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_HomeComponent0,renderType_HomeComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_38 = import16.UNINITIALIZED;
    this._expr_39 = import16.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','card-container'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'h1',new import3.InlineArray4(4,'class','sample-content','x-large',''),(null as any));
    this._XLargeDirective_2_3 = new import12.Wrapper_XLargeDirective(new import17.ElementRef(this._el_2),this.renderer);
    this._text_3 = this.renderer.createText(this._el_2,'Your Content Here',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_0,'hr',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_6 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_0,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'\n    For hot module reloading run\n    ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_7,'pre',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_10 = this.renderer.createText(this._el_9,'npm run start:hmr',(null as any));
    this._text_11 = this.renderer.createText(this._el_7,'\n  ',(null as any));
    this._text_12 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._el_13 = import3.createRenderElement(this.renderer,this._el_0,'hr',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_14 = this.renderer.createText(this._el_0,'\n\n  ',(null as any));
    this._el_15 = import3.createRenderElement(this.renderer,this._el_0,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_16 = this.renderer.createText(this._el_15,'\n    ',(null as any));
    this._el_17 = import3.createRenderElement(this.renderer,this._el_15,'h4',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_18 = this.renderer.createText(this._el_17,'Local State',(null as any));
    this._text_19 = this.renderer.createText(this._el_15,'\n\n    ',(null as any));
    this._el_20 = import3.createRenderElement(this.renderer,this._el_15,'form',new import3.InlineArray2(2,'autocomplete','off'),(null as any));
    this._NgForm_20_3 = new import13.Wrapper_NgForm((null as any),(null as any));
    this._ControlContainer_20_4 = this._NgForm_20_3.context;
    this._NgControlStatusGroup_20_5 = new import14.Wrapper_NgControlStatusGroup(this._ControlContainer_20_4);
    this._text_21 = this.renderer.createText(this._el_20,'\n\n      ',(null as any));
    this._el_22 = import3.createRenderElement(this.renderer,this._el_20,'input',new import3.InlineArray4(4,'autofocus','','placeholder','Submit Local State to App State'),(null as any));
    this._text_23 = this.renderer.createText(this._el_20,'\n\n      ',(null as any));
    this._el_24 = import3.createRenderElement(this.renderer,this._el_20,'button',new import3.InlineArray4(4,'color','primary','md-raised-button',''),(null as any));
    this._text_25 = this.renderer.createText(this._el_24,'Submit Value',(null as any));
    this._text_26 = this.renderer.createText(this._el_20,'\n    ',(null as any));
    this._text_27 = this.renderer.createText(this._el_15,'\n    ',(null as any));
    this._text_28 = this.renderer.createText(this._el_15,'\n\n    ',(null as any));
    this._el_29 = import3.createRenderElement(this.renderer,this._el_15,'pre',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_30 = this.renderer.createText(this._el_29,'',(null as any));
    this._text_31 = this.renderer.createText(this._el_15,'\n\n  ',(null as any));
    this._text_32 = this.renderer.createText(this._el_0,'\n\n',(null as any));
    this._text_33 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_20,new import3.InlineArray8(6,'ngSubmit',(null as any),'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_20));
    this._NgForm_20_3.subscribe(this,this.eventHandler(this.handleEvent_20),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_22,new import3.InlineArray2(2,'input',(null as any)),this.eventHandler(this.handleEvent_22));
    this._pipe_json_0 = new import15.JsonPipe();
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._text_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._text_19,
      this._el_20,
      this._text_21,
      this._el_22,
      this._text_23,
      this._el_24,
      this._text_25,
      this._text_26,
      this._text_27,
      this._text_28,
      this._el_29,
      this._text_30,
      this._text_31,
      this._text_32,
      this._text_33
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.XLargeDirective) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._XLargeDirective_2_3.context; }
    if (((token === import19.NgForm) && ((20 <= requestNodeIndex) && (requestNodeIndex <= 26)))) { return this._NgForm_20_3.context; }
    if (((token === import20.ControlContainer) && ((20 <= requestNodeIndex) && (requestNodeIndex <= 26)))) { return this._ControlContainer_20_4; }
    if (((token === import21.NgControlStatusGroup) && ((20 <= requestNodeIndex) && (requestNodeIndex <= 26)))) { return this._NgControlStatusGroup_20_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import16.ValueUnwrapper();
    this._XLargeDirective_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    this._NgForm_20_3.ngDoCheck(this,this._el_20,throwOnChange);
    this._NgControlStatusGroup_20_5.ngDoCheck(this,this._el_20,throwOnChange);
    this._NgControlStatusGroup_20_5.checkHost(this,this,this._el_20,throwOnChange);
    const currVal_38:any = this.context.localState.value;
    if (import3.checkBinding(throwOnChange,this._expr_38,currVal_38)) {
      this.renderer.setElementProperty(this._el_22,'value',currVal_38);
      this._expr_38 = currVal_38;
    }
    valUnwrapper.reset();
    const currVal_39:any = import3.inlineInterpolate(1,'this.localState = ',valUnwrapper.unwrap(this._pipe_json_0.transform(this.context.localState)),'');
    if ((valUnwrapper.hasWrappedValue || import3.checkBinding(throwOnChange,this._expr_39,currVal_39))) {
      this.renderer.setText(this._text_30,currVal_39);
      this._expr_39 = currVal_39;
    }
  }
  destroyInternal():void {
    this._NgForm_20_3.ngOnDestroy();
  }
  handleEvent_20(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._NgForm_20_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngSubmit')) {
      const pd_sub_0:any = ((<any>this.context.submitState(this.context.localState.value)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_22(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'input')) {
      const pd_sub_0:any = ((<any>(this.context.localState.value = $event.target.value)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}